---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app audiobookshelf
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.3.2
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 2
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  uninstall:
    keepHistory: false
  dependsOn:
    - name: democratic-csi-nfs
      namespace: storage
  values:
    controllers:
      audiobookshelf:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          audiobookshelf:
            image:
              repository: ghcr.io/advplyr/audiobookshelf
              tag: 2.12.1@sha256:1ced08e33211a2171be2551e2a9461913fe49ab2997707d0c36de961cca7656d
            env:
              TZ: ${TIMEZONE}
              CONFIG_PATH: /config
              METADATA_PATH: /config/metadata
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /healthcheck
                    port: &port 80
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: false
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 100m
                memory: 100M
              limits:
                memory: 300M
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: &uid 1000
        runAsGroup: &gid 4000
        fsGroup: *gid
        fsGroupChangePolicy: OnRootMismatch
        supplementalGroups: [10000]
        seccompProfile: { type: RuntimeDefault }
    service:
      app:
        controller: *app
        ports:
          http:
            port: *port
    ingress:
      app:
        annotations:
          external-dns.alpha.kubernetes.io/target: &host audiobookshelf-k8s.${SECRET_DOMAIN}
        className: internal
        hosts:
          - host: *host
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
        tls:
          - hosts:
              - *host
    persistence:
      cache:
        type: emptyDir
        globalMounts:
          - path: /.npm
      config:
        existingClaim: audiobookshelf-config
      media:
        type: nfs
        server: ${TRUENAS_IP}
        path: ${NFS_PATH_MEDIA}
        globalMounts:
          - path: /data
            readOnly: true
      metadata:
        globalMounts:
          - path: /config/metadata
