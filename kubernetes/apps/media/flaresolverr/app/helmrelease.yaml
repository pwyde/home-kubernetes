---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app flaresolverr
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.3.2
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 2
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controllers:
      flaresolverr:
        containers:
          flaresolverr:
            image:
              repository: ghcr.io/flaresolverr/flaresolverr
              tag: v3.3.21@sha256:f104ee51e5124d83cf3be9b37480649355d223f7d8f9e453d0d5ef06c6e3b31b
            env:
              TZ: $TZ
              LANG: en_GB
              LOG_LEVEL: info
              LOG_HTML: false
              PORT: &port 8191
              PROMETHEUS_ENABLED: true
              PROMETHEUS_PORT: &metricsPort 8192
              TEST_URL: https://www.google.com
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /health
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: false
            resources:
              requests:
                cpu: 10m
                memory: 100Mi
              limits:
                memory: 300Mi
    # defaultPodOptions:
    #   securityContext:
    #     runAsNonRoot: true
    #     runAsUser: &uid 65534
    #     runAsGroup: &gid 65534
    #     fsGroup: *gid
    #     fsGroupChangePolicy: OnRootMismatch
    #     supplementalGroups: [10000]
    #     seccompProfile: { type: RuntimeDefault }
    service:
      app:
        controller: *app
        ports:
          http:
            port: *port
          metrics:
            port: *metricsPort
            protocol: TCP
            targetPort: *metricsPort
    serviceMonitor:
      app:
        serviceName: *app
        endpoints:
          - port: metrics
            scheme: http
            path: /metrics
            interval: 1m
            scrapeTimeout: 10s
